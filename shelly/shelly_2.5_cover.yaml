substitutions:
  name: shelly_25_cover
!!merge <<: !include ../global/global.yaml
esp8266:
  board: esp01_1m
  restore_from_flash: true
i2c:
  sda: GPIO12
  scl: GPIO14
sensor:
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${name}_temperature
    unit_of_measurement: "Â°C"
    entity_category: diagnostic
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      above: 90
      then:
        - switch.turn_on: _shutdown
  - platform: ade7953_i2c
    irq_pin: GPIO16
    update_interval: 0.5s
    voltage:
      name: ${name}_voltage
      filters:
        - delta: 0.5
    current_a:
      id: current_a
      on_raw_value:
        if:
          condition:
            switch.is_on: reverse_cover
          then:
            sensor.template.publish:
              id: current_close
              state: !lambda return x;
          else:
            sensor.template.publish:
              id: current_open
              state: !lambda return x;
    current_b:
      id: current_b
      on_raw_value:
        if:
          condition:
            switch.is_on: reverse_cover
          then:
            sensor.template.publish:
              id: current_open
              state: !lambda return x;
          else:
            sensor.template.publish:
              id: current_close
              state: !lambda return x;
    active_power_a:
      id: power_a
      on_raw_value:
        if:
          condition:
            switch.is_on: reverse_cover
          then:
            sensor.template.publish:
              id: power_close
              state: !lambda return x;
          else:
            sensor.template.publish:
              id: power_open
              state: !lambda return x;
    active_power_b:
      id: power_b
      on_raw_value:
        if:
          condition:
            switch.is_on: reverse_cover
          then:
            sensor.template.publish:
              id: power_open
              state: !lambda return x;
          else:
            sensor.template.publish:
              id: power_close
              state: !lambda return x;
  - platform: template
    id: current_open
    name: ${name}_current_open
    unit_of_measurement: "A"
    device_class: "current"
    state_class: "measurement"
  - platform: template
    id: current_close
    name: ${name}_current_close
    unit_of_measurement: "A"
    device_class: "current"
    state_class: "measurement"
  - platform: template
    id: power_open
    name: ${name}_power_open
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"
    filters:
      - delta: 1
  - platform: template
    id: power_close
    name: ${name}_power_close
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"
    filters:
      - multiply: -1
      - delta: 1
  - platform: template
    id: power
    name: ${name}_power
    unit_of_measurement: "W"
    device_class: "power"
    state_class: "measurement"
    lambda: |-
      return (id(power_open).state + id(power_close).state);
  - platform: integration
    name: ${name}_total_energy
    unit_of_measurement: 'kWh'
    integration_method: right
    time_unit: min
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    sensor: power
    filters:
      - multiply: 0.001
switch:
  - platform: gpio
    id: powered_a
    pin: GPIO15
    restore_mode: RESTORE_DEFAULT_OFF
    interlock: &interlock [powered_a, powered_b]
    interlock_wait_time: 200ms
  - platform: gpio
    id: powered_b
    pin: GPIO4
    restore_mode: RESTORE_DEFAULT_OFF
    interlock: *interlock
    interlock_wait_time: 200ms
  - platform: template
    id: reverse_switch
    name: ${name}_reverse_switch
    entity_category: config
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: template
    id: reverse_cover
    name: ${name}_reverse_cover
    entity_category: config
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: shutdown
    id: _shutdown
binary_sensor:
  - platform: gpio
    id: switch_a
    pin:
      number: GPIO13
    on_press:
      then:
        if:
          condition:
            switch.is_on: reverse_switch
          then:
            - cover.close: cvr
          else:
            - cover.open: cvr
    on_release:
      then:
        - cover.stop: cvr
  - platform: gpio
    id: switch_b
    pin:
      number: GPIO5
    on_press:
      if:
        condition:
          switch.is_on: reverse_switch
        then:
          - cover.open: cvr
        else:
          - cover.close: cvr
    on_release:
      then:
        - cover.stop: cvr
cover:
  - platform: current_based
    id: cvr
    name: ${name}_cover
    max_duration: 38s
    start_sensing_delay: 1s
    open_sensor: current_open
    open_moving_current_threshold: 0.2
    open_obstacle_current_threshold: 0.8
    open_duration: 36s
    open_action:
      if:
        condition:
          switch.is_on: reverse_cover
        then:
          - switch.turn_on: powered_b
        else:
          - switch.turn_on: powered_a
    close_sensor: current_close
    close_moving_current_threshold: 0.2
    close_obstacle_current_threshold: 0.8
    close_duration: 32s
    close_action:
      if:
        condition:
          switch.is_on: reverse_cover
        then:
          - switch.turn_on: powered_a
        else:
          - switch.turn_on: powered_b
    stop_action:
      - switch.turn_off: powered_a
      - switch.turn_off: powered_b
